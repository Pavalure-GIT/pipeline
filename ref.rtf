{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Monaco;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fnil\fcharset0 HelveticaNeue;\f5\fmodern\fcharset0 Courier;
\f6\fnil\fcharset0 HelveticaNeue-Bold;\f7\fnil\fcharset0 HelveticaNeue-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red18\green19\blue24;\red239\green240\blue240;\red0\green0\blue233;
\red22\green21\blue22;\red22\green21\blue22;\red0\green0\blue0;\red53\green53\blue53;\red0\green0\blue0;
\red38\green38\blue38;\red52\green52\blue52;\red242\green242\blue242;\red11\green76\blue180;\red220\green161\blue13;
\red27\green29\blue31;}
{\*\expandedcolortbl;;\cssrgb\c8627\c9804\c12157;\cssrgb\c94902\c95294\c95294;\cssrgb\c0\c0\c93333;
\cssrgb\c11373\c10980\c11373;\cssrgb\c11373\c10980\c11373\c3922;\csgray\c0;\cssrgb\c27059\c27059\c27059;\cssrgb\c0\c0\c0;
\cssrgb\c20000\c20000\c20000;\cssrgb\c26667\c26667\c26667;\cssrgb\c96078\c96078\c96078;\cssrgb\c1961\c38824\c75686;\cssrgb\c89412\c68627\c3922;
\cssrgb\c14118\c15294\c16078;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh15240\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
_4448f5e29ed047dd8861d6b46bca9f97.testing.ciltdint.co.uk\
\
_6218f101853d2f194b135de2a2f5eb11.gwpjclltnz.acm-validations.aws.
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26\fsmilli13333 \cf4 \expnd0\expndtw0\kerning0
\ul \ulc4 \
\pard\pardeftab720\sl360\partightenfactor0

\f2\fs24 \cf5 \cb6 \ulnone -target=module.infrastructure.aws_instance.jump -target=module.infrastructure.aws_eip.jump\
To run a specific module or .tf file\
\pard\pardeftab720\partightenfactor0

\f1\fs26\fsmilli13333 \cf4 \cb1 \ul \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f3\fs22 \cf7 \kerning1\expnd0\expndtw0 \ulnone \CocoaLigature0 -target=module.infrastructure.aws_instance.jenkins -target=module.infrastructure.aws_lb_target_group_attachment.jenkins -target=module.infrastructure.aws_lb_listener_rule.jenkins-https -target=module.infrastructure.aws_route53_record.jenkins -target=module.infrastructure.aws_route53_record.jenkins-private\
\
-target=aws_instance.mailcatcher -target=aws_lb_target_group_attachment.mailcatcher -target=aws_lb_listener_rule.mailcatcher -target=aws_route53_record.mailcatcher-public -target=aws_route53_record.mailcatcher-private\
\
packer build -var env=staging -var app=appcroner -var php=7.2 packer/app.json\
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 \expnd0\expndtw0\kerning0
\CocoaLigature1 packer build -var php=7.1 packer/webserver.json
\f1\fs26\fsmilli13333 \cf4 \ul \
\
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://gitlab.nonprod.dwpcloud.uk/hcs/monitoring-template/blob/master/monitoring/assets/common_user_data.sh"}}{\fldrslt \cf4 https://gitlab.nonprod.dwpcloud.uk/hcs/monitoring-template/blob/master/monitoring/assets/common_user_data.sh}}\cf9 \ulnone  
\f0\fs32 \
\pard\pardeftab720\partightenfactor0

\fs29\fsmilli14667 \cf9 \'a0
\fs32 \

\fs29\fsmilli14667 * aws_route53_record.alias: 1 error(s) occurred:
\fs32 \

\fs29\fsmilli14667 \'a0
\fs32 \

\fs29\fsmilli14667 * aws_route53_record.alias: AccessDenied: User: arn:aws:iam::923609091913:user/suresh.pavalure is not authorized to access this resource
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 status code: 403, request id: ecc01cdf-40f1-11e9-b83a-f7a972cb8e1e
\fs32 \

\fs29\fsmilli14667 * aws_route53_record.nol-value: 1 error(s) occurred:
\fs32 \

\fs29\fsmilli14667 \'a0
\fs32 \

\fs29\fsmilli14667 * aws_route53_record.nol-value: AccessDenied: User: arn:aws:iam::923609091913:user/suresh.pavalure is not authorized to access this resource
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 status code: 403, request id: ecc52672-40f1-11e9-9108-5be69ab59dce
\fs32 \

\fs29\fsmilli14667 \'a0
\fs32 \

\fs29\fsmilli14667 `git clone repo_url` - To clone remote repository
\fs32 \

\fs29\fsmilli14667 Go into the folder
\fs32 \

\fs29\fsmilli14667 `git status` - To see what branch you are in
\fs32 \

\fs29\fsmilli14667 then `git checkout branchname` - To go to the branch (edited) 
\fs32 \

\fs29\fsmilli14667 \'a0
\fs32 \

\fs29\fsmilli14667 or `git checkout -b branchname` - To create and go to the branch (edited) 
\fs32 \

\fs29\fsmilli14667 then modify the code
\fs32 \

\fs29\fsmilli14667 `git add .` - To add the change file also can use `git status` - To see what files are affected before
\fs32 \

\fs29\fsmilli14667 then `git commit -m "code change message"` - To commit the code
\fs32 \

\fs29\fsmilli14667 if already branch created after code change just `git push` - To push the code to remote branch
\fs32 \

\fs29\fsmilli14667 "route53:GetHostedZone",
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "route53:ListHostedZonesByName",
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "route53:ChangeResourceRecordSets",
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "route53:CreateHealthCheck",
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "route53:GetHealthCheck",
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "route53:DeleteHealthCheck",
\fs32 \

\fs29\fsmilli14667 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 "route53:UpdateHealthCheck",
\fs32 \

\fs29\fsmilli14667 \uc0\u8232 
\fs32 \cf10 \kerning1\expnd0\expndtw0 test -D surefire.suiteXmlFiles=\'93$TestSuite\'94 -Dbrowser=\'93$BROWSER\'94 -DURL=\'93$APP_URL\'94\
\
\pard\pardeftab720\partightenfactor0

\f5\fs28 \cf11 \cb12 \expnd0\expndtw0\kerning0
9GF48udaGfuBEdBrjo%4XmJ6e!zX8Zz6
\f0\fs32 \cf9 \cb1 \
\
\
\pard\pardeftab720\partightenfactor0

\f6\b\fs24 \cf8 Bastion Server installation:
\f4\b0 \
\'a0\
SRE have stated they are happy for us to create are own EC2 instance as a bastion OR we can use the following approach (suggested by Massimo / Gavin Hammill):\
Hello all,\
Please see the link below:\
\pard\pardeftab720\sa40\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://gitlab.itsshared.net/devops/tactical-pua/tree/develop/pdu/terraform/modules/bastion"}}{\fldrslt 
\fs28 \cf13 \ul \ulc13 https://gitlab.itsshared.net/devops/tactical-pua/tree/develop/pdu/terraform/modules/bastion}}
\fs28 \
\pard\pardeftab720\partightenfactor0

\fs24 \cf8 This is a \'91mostly finished\'92 piece of work which is perfectly usable, just not very well documented. The idea is you include this module in your existing Terraform setup by making use of the \'91source\'92 parameter to reference an external module something like this:\
module \'93mybastion\'94\
\{ source = \'93git::{\field{\*\fldinst{HYPERLINK "https://gitlab.itsshared.net/devops/tactical-pua/tree/develop/pdu/terraform/modules//bastion"}}{\fldrslt \cf4 \ul https://gitlab.itsshared.net/devops/tactical-pua/tree/develop/pdu/terraform/modules//bastion}}\'94 param1 = \'93blah\'94 param2 = \'93blah\'94 \}\
You can see the parameters required by looking in the \'91{\field{\*\fldinst{HYPERLINK "http://variables.tf/"}}{\fldrslt \cf4 \ul variables.tf}}\'92 at the URL above.\
There\'92s no magic about the bastion \'96 it\'92s just an EC2 instance in an auto-scaling group. As SRE, we use Lambda functions to enable/disable the bastion by adjusting the min/max values of the autoscaling group from zero to one.\
Hope that helps!\
Cheers,\
Gavin.\
\'a0\
Tactical Privileged User Access Management\
This repository collects IaC for generating a set resources used for the tactical Privileged User Access Management.\
\'a0\
Actors\
As per PUA architectural decision, there are 3 actors involved in the process:\
\'a0\
SRE central team\
SRE team leaders\
SRE engineers\
\'a0\
The SRE central team will perform the actions for managing the basic steps (user management, deployment of script)\
pre-requisites of the PUA technical solution.\
The SRE team leaders will be allowed to invoke 2 specific lambda functions (HCSSREGrantAccess and\
HCSSRERevokeAccess) deployed into the dwp-sre-prod account.\
The SRE engineers will be enabled to assume a specific role into the destination (PDU production account) account.\
\'a0\
Resources\
\'a0\
SRE production account\
The deployment in the production account is performed by the SRE central team.\
\'a0\
IAM resources\
HCSSRELead group/policy\
An SRE lead belongs to the IAM HCSSRELeadGroup.\
The policy attached to the role should grant (at least?) invoke privileges on the lambda functions\
HCSSREGrantAccess and HCSSRERevokeAccess.\
\'a0\
Lambda functions\
\'a0\
HCSSREGrantAccess\
Input\
\'a0\
Destination account number\
Role to assume (HCSSREDeployerRole, HCSSRETroubleshootingRole, HCSSREIncidentManagementRole)\
Username of the SRE engineer to be granted access to the resources\
\'a0\
Action\
\'a0\
Revoke every assume role permission from the user\
Grant permission to the role\
\'a0\
The permission granted should look like\
\{\
\'a0 "Version": "2012-10-17",\
\'a0 "Statement": \{\
\'a0 \'a0 "Effect": "Allow",\
\'a0 \'a0 "Action": "sts:AssumeRole",\
\'a0 \'a0 "Resource": "arn:aws:iam::DESTINATION_ACCOUNT_ID:role/ROLE_NAME"\
\'a0 \}\
\}\
\'a0\
HCSSRERevokeAccess\
Input\
\'a0\
Username of the SRE engineer\
\'a0\
Action\
\'a0\
Revoke every assume role permission from the user\
\'a0\
\'a0\
Destination accounts\
The resources in the destination accounts have to be deployed using CloudFormation stack/s.\
The deployment is initially performed by the SRE lead in charge of the AWS account. The manual action should be\
automated using a centralised script or Cloud Manager.\
HCSSREDeployer IAM role/group/policy\
\'a0\
Access to CloudWatch logs\
Permission to invoke the Deployer lambda function\
\'a0\
HCSSRETroubleshooting IAM role/group/policy\
\'a0\
Read-only access\
Ability to instantiate a bastion (invoke HCSInstantiateBastion)\
\'a0\
HCSSREIncidentManagement IAM role/group/policy\
The details should take as reference the appendix of the Tactical PUA draft.\
HCSInstantiateBastion lambda function\
The function must:\
\'a0\
replace the key pair used for the bastion (key name HCSBastion)\
saves the newly generated private key in SSM (parameter name /HCS/Bastion/private_key)\
check if any EC2 instance with the tag Role is set to Bastion\
\'a0\
if a bastion is active\
\'a0\
record the activity\
terminate the bastion\
\'a0\
\'a0\
\'a0\
\'a0\
change the min size, max size and desired size of the bastion's auto scaling group to 1\
\'a0\
HCSTerminateBastion lambda function\
This is a scheduled function that every 15 minutes must:\
\'a0\
check if any EC2 instance with the tag Role is set to Bastion\
\'a0\
if the bastion has been active for less than one hour the function\
\'a0\
record the activity\
\'a0\
\'a0\
if the bastion has been active for more than one hour the function\
\'a0\
record the activity\
change the min size, max size and desired size of the\
bastion's auto scaling group to 0\
replace the key pair used for the bastion (key name HCSBastion)\
saves the newly generated private key in SSM (parameter name\
/HCS/Bastion/private_key)\
\'a0\
\'a0\
\'a0\
\'a0\
\'a0\
\'a0\
Bastion template\
The bastion template is provided as Terraform module to be consumed by the PDUs\
during the IaC deployment.\
Input\
\'a0\
VPC ID\
Subnet ID\
CIDR ranges allowed\
\'a0\
Resources\
\'a0\
Auto scaling group\
\'a0\
Min size 0\
Max size 0\
Min size 0\
\'a0\
\'a0\
Launch configuration\
\'a0\
Hardened AMI from HCS PE\
CloudWatch agent installed\
\'a0\
\'a0\
Instance profile\
\'a0\
CloudWatch agent permissions\
\'a0\
\'a0\
Security group\
\'a0\
Ingress on port 22 only from allowed CIDR ranges\
Egress open on port 22\
\'a0\
\'a0\
\'a0\
Output\
\'a0\
Security group ID\
\'a0\
\'a0\
Scenarios\
The scenarios are described in the official PUAM document.\
\'a0\
\'a0\
PDU Read-only Access\
In some cases we want to grant access to specific users in order that they can work with the SRE team to diagnose problems. Giving access to CloudWatch\
dashboards and logs is a common request. In this case, we use the tactical-pua repo to manage IAM users in the sre-prod AWS account which have the ability\
to AssumeRole to the respective PDU's production account.\
This is controlled by the use of YAML files in the root directory. Please look at config-prod.yaml for an example\
A default password will be generated and printed when make dist is run, and the user will only be able to 'Switch Role' into the HCSPDUReadOnlyRole in\
their production account once they log into the sre-prod web console and enable MFA.\
\'a0\
Deployment\
This commandline assumes that your ~/.aws/config default profile has access to AssumeRole the role defined by the ROLE variable below:\
make dist WORKSPACE=prod ROLE=arn:aws:iam::335925085126:role/AdminAccountAccessRole\
Additionally the variables ZSCALER_CERT (default: /etc/ssl/certs/zscaler.pem) and DEFAULT_REGION\
(default: eu-west-2) can be specified as parameter of the make target\
make dist WORKSPACE=prod ROLE=arn:aws:iam::335925085126:role/AdminAccountAccessRole ZSCALER_CERT=/etc/ssl/certs/zscaler.pem DEFAULT_REGION=eu-west-2\'a0\
\'a0\
\'a0\
Terraform project to build the NTC-R/NOL-R integration environments\
To initialise environment for nonproduction dev ensure you have a nonproduction aws credential set up for the development/test account (in ~/.aws/credentials)\
If switching between Remove any existing terraform.tfstate files from .terraform/ folder.\
Run the following to set up a dev workspace within the folder of the stack that you are running.\
AWS_PROFILE=nonproduction terraform init -backend-config backend_config/dev.conf\
AWS_PROFILE=nonproduction terraform workspace select dev || terraform workspace new dev\
AWS_PROFILE=production terraform init -backend-config backend_config/prod.conf\
AWS_PROFILE=production terraform workspace select prod || terraform workspace new prod\
AWS_PROFILE=nonproduction terraform init -backend-config backend_config/dev.conf\
Prerequsites\
For certifcates and keys used for Mutual Auth for the NTC and NOL API calls, the following certifciate and keys have been shared and have been added to the AWS parameter store.\
Integration VPC (CIS)\
The following artifcacts (referenced by their Parameter name), are required by the SOAP NOL-R call to CIS API (API234) to validate a Notification record.\
/NOLNTC/NOL/CIS_CERT - Certifcate Signed by the Integration Team Root CA\
/NOLNTC/NOL/CIS_ROOT_CA - Integration Teams Root CA\
/NOLNTC/NOL/CIS_KEY - Private Key (Generated by the creation of the CSR)\
The NOLNTC PDU should generate a Cerificate Signing Request (CSR) for the environment (nonprod or prod) and provide this to the integration team. This will generate a key that should be stored in /NOLNTC/NOL/CIS_KEY using aws cli.\
The integration team will respond with their RootCA and a signed version of your CSR (e.g. csr.crt)\
These should be uploaded\
SDX (SFT Agents / HMRC API Call)\
The following artifacts are required\
/NOLNTC/NOLNTC_SFT_CRT" --with-decryption | jq -r '.Parameters[].Value' > tmp.crt\
/NOLNTC/NOLNTC_SFT_KEY" --with-decryption | jq -r '.Parameters[].Value' > tmp.key\
/NOLNTC/NOLNTC_ROOT_CA_CRT" --with-decryption | jq -r '.Parameters[].Value' > tmp_ca.crt\
Generating new Certifcates\
The following stacks should be run in the following order.\
Each stack is a separate folder.\
\'a0\
Network (VPC Creation, Routing, Subnets and Squid Proxy)\
NOL Stack (EC2 Instances, ECS Cluster, Load Balancers, ECS Tasks)\
NTC Stack (EC2 Instances, ECS Cluster, Load Balancers, ECS Tasks)\
Kong NOL Stack - Used for Single Sign On / ADFS\
Kong NTC Stack - Used for Single Sign On / ADFS\
\'a0\
Please note that the manual GitLab CI/CD job will create a manifest file and an RPM file containing the code for the stacks.\
Running this job will publush the manifest and RPM file to an S3 bucket at s3://dwp-cloudservices-nolntc-deploy-test/\
To run this a deployer script (deployer.sh) should be used to run the required stacks.\
(ENVIRONMENT sys variable needs to be set - e.g production, stage.\
For example - the following would create the network stack followed by NOL, NTC and Kong stacks\'a0\
cd /noltf/network/\
terraform init\
terraform workspace select production || terraform workspace new production\
terraform apply -auto-approve\
\'a0\
cd /noltf/nol/\
terraform init\
terraform workspace select $\{ENVIRONMENT\} || terraform workspace new $\{ENVIRONMENT\}\
terraform apply -auto-approve\
\'a0\
cd /noltf/ntc/\
terraform init\
terraform workspace select $\{ENVIRONMENT\} || terraform workspace new $\{ENVIRONMENT\}\
terraform apply -auto-approve\
\'a0\
cd /noltf/kong_nol/\
terraform init\
terraform workspace select $\{ENVIRONMENT\} || terraform workspace new $\{ENVIRONMENT\}\
terraform apply -auto-approve\
\'a0\
cd /noltf/kong_ntc/\
terraform init\
terraform workspace select $\{ENVIRONMENT\} || terraform workspace new $\{ENVIRONMENT\}\
terraform apply -auto-approve\
\pard\pardeftab720\partightenfactor0

\f6\b \cf8 \'a0
\f0\b0\fs32 \cf9 \

\f6\b\fs24 \cf8 AWS Commands:
\f0\b0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 To check the workspace list and select
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws workspace list
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws workspace select prod
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 To set / change the configure in ~/.aws/credentials
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 AWS_PROFILE=PROD <terraform command>
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 AWS_PROFILE=PROD aws ec2 describe-images\'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0describe-images
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--executable-users <value>]
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--filters <value>]
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--image-ids <value>]
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--owners <value>]
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--dry-run | --no-dry-run]
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--cli-input-json <value>]
\f0\fs32 \cf9 \

\f4\fs24 \cf8 [--generate-cli-skeleton <value>]
\f0\fs32 \cf9 \
\pard\pardeftab720\sa40\partightenfactor0

\f4\fs28 \cf8 \'a0
\f0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 aws ec2 describe-images --filters "Name=tag:Custom,Values=Linux1" --query 'Images[*].\{ID:ImageId\}'
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 Create the task definition template\'a0
\f0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f6\b\fs24 \cf8 aws ecs register-task-definition --generate-cli-skeleton
\f0\b0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws route53 associate-vpc-with-hosted-zone --hosted-zone-id Z2USJK6LK54GZY --vpc VPCRegion = eu-west-2a,VPCId=vpc-0acbc7f77f44f24bb\'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws route53 list-hosted-zones-by-name
\f0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f6\b\fs24 \cf8 aws iam {\field{\*\fldinst{HYPERLINK "https://docs.aws.amazon.com/cli/latest/reference/iam/create-service-linked-role.html"}}{\fldrslt \cf14 \ul \ulc14 create-service-linked-role}} --aws-service-name <
\f7\i SERVICE-NAME>
\f6\i0 .{\field{\*\fldinst{HYPERLINK "http://amazonaws.com/"}}{\fldrslt \cf4 \ul amazonaws.com}}
\f0\b0\fs32 \cf9 \

\f6\b\fs24 \cf8 aws iam {\field{\*\fldinst{HYPERLINK "https://docs.aws.amazon.com/cli/latest/reference/iam/create-service-linked-role.html"}}{\fldrslt \cf14 \ul \ulc14 create-service-linked-role}} --aws-service-name {\field{\*\fldinst{HYPERLINK "http://route53.amazonaws.com/"}}{\fldrslt \cf4 \ul route53.amazonaws.com}}
\f0\b0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws ec2 create-key-pair --key-name nol_key1 --query 'KeyMaterial' --output text > nol_key1.pem
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws ec2 stop-instances --region us-east-2 --instance-ids\'a0<value>\'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws iam delete-instance-profile --instance-profile-name\'a0 mon-NOLNTC-combined-iam-instance-profile-dev
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 aws route53 disassociate-vpc-from-hosted-zone --hosted-zone-id Z2USJK6LK54GZY --vpc VPCRegion = eu-west-2a,VPCId=vpc-0acbc7f77f44f24bb\'a0
\f0\fs32 \cf9 \

\f4\fs24 \cf8 \'a0
\f0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f6\b\fs24 \cf8 \'a0
\f4\b0 \

\f6\b GIT Command :
\f4\b0 \
\'a0\
Users/suresh.pavalure/github/.git/nolntc-terraforms\
\'a0\
How to set / create ssh key - {\field{\*\fldinst{HYPERLINK "https://docs.gitlab.com/ee/ssh/"}}{\fldrslt \cf14 \ul \ulc14 https://docs.gitlab.com/ee/ssh/}}\ul \'a0\ulnone  \'a0\
Workspace - /Users/suresh.pavalure/workspace\
\'a0\
\'a0\
Git config \'97global {\field{\*\fldinst{HYPERLINK "http://user.name/"}}{\fldrslt \cf4 \ul user.name}} \'93Suresh\'94\
Git config \'97global user.email \'93{\field{\*\fldinst{HYPERLINK "mailto:spavalure@dxc.com"}}{\fldrslt \cf14 \ul \ulc14 spavalure@dxc.com}}\'94\
git clone <https repo name>\
git pull origin master\
\'a0\
`git clone repo_url` - To clone remote repository\
Go into the folder\
`git status` - To see what branch you are in\
then `	git checkout branchname` - To go to the branch (edited)\
\'a0\
or `git checkout -b branchname` - To create and go to the branch (edited)\
then modify the code\
`git add .` - To add the change file also can use `git status` - To see what files are affected before\
then `git commit -m "code change message"` - To commit the code\
if already branch created after code change just `git push` - To push the code to remote branch\
If you are creating the new branch and you are doing the first time use below command..\
git push --set-upstream origin route53\
\'a0\
git diff <filename>\
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf9 \
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 Git branch - will list all the branches\
https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-linux-amd64.tar.gz\
\
packer build -var php=7.1 packer/webserver.json\
\
\pard\pardeftab720\partightenfactor0

\f3\fs26 \cf15 when \{\
    expression \{ \
        params.name == 'a' ||\
        params.name == 'd' ||\
        params.name == 'f' \
    \}\
\}\
\pard\pardeftab720\partightenfactor0

\f4\fs24 \cf8 \
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf10 c6fb7b8b-b95e-412f-bf47-fd6e104f948e}